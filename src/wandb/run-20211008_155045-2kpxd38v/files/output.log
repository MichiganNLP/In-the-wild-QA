  | Name  | Type                       | Params
-----------------------------------------------------
0 | model | T5ForConditionalGeneration | 222 M
-----------------------------------------------------
222 M     Trainable params
0         Non-trainable params
222 M     Total params
891.614   Total estimated model params size (MB)
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
> /home/dnaihao/In-the-wild-QA/src/T5/model.py(149)train_dataloader()
    148         import ipdb;ipdb.set_trace()
--> 149         return dataloader
    150
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb>
Exception in thread Thread-3:
Traceback (most recent call last):
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 215, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 737, in communicate_stop_status
    resp = self._communicate(req, timeout=timeout, local=True)
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 539, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/dnaihao/anaconda3/envs/442/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 544, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
ipdb>
ipdb>
ipdb> --KeyboardInterrupt--
ipdb> --KeyboardInterrupt--
